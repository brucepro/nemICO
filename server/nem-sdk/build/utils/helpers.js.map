{"version":3,"sources":["../../src/utils/helpers.js"],"names":["haveWallet","walletName","array","i","length","name","needsSignature","multisigTransaction","data","transaction","signer","account","publicKey","otherTrans","signatures","meta","cosignatoryOf","k","txTypeToName","id","Transfer","ImportanceTransfer","MultisigModification","ProvisionNamespace","MosaicDefinition","MosaicSupply","haveTx","hash","getTransactionIndex","mosaicIdToName","mosaicId","namespaceId","getHostname","uri","_uriParser","document","createElement","href","hostname","haveCosig","address","pubKey","getFileName","filename","replace","getExtension","split","pop","NEM_EPOCH","Date","UTC","createNEMTimeStamp","Math","floor","now","fixPrivateKey","privateKey","slice","isPrivateKeyValid","console","error","isHexadecimal","isPublicKeyValid","checkAndFormatUrl","node","defaultWebsocketPort","pattern","test","port","createTimeStamp","getTimestampShort","date","dd","getDate","mm","getMonth","yyyy","getFullYear","convertDateToString","toDateString","extendObj","arguments","key","hasOwnProperty","str","match","searchMosaicDefinitionArray","mosaicDefinitionArray","keys","result","mosaic","grep","items","callback","filtered","len","item","cond","push","isTextAmountValid","n","nn","Number","toString","isNaN","isFinite","cleanTextAmount","formatEndpoint","endpoint","host","module","exports"],"mappings":"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","file":"helpers.js","sourcesContent":["import convert from './convert';\nimport TransactionTypes from '../model/transactionTypes';\n\n/**\n * Check if wallet already present in an array\n *\n * @param {string} walletName - A wallet name\n * @param {array} array - A wallets array\n *\n * @return {boolean} - True if present, false otherwise\n */\nlet haveWallet = function(walletName, array) {\n    let i = null;\n    for (i = 0; array.length > i; i++) {\n        if (array[i].name === walletName) {\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * Check if a multisig transaction needs signature\n *\n * @param {object} multisigTransaction - A multisig transaction\n * @param {object} data - An account data\n *\n * @return {boolean} - True if it needs signature, false otherwise\n */\nlet needsSignature = function(multisigTransaction, data) {\n    if (multisigTransaction.transaction.signer === data.account.publicKey) {\n        return false;\n    }\n    if (multisigTransaction.transaction.otherTrans.signer === data.account.publicKey) {\n        return false;\n    }\n    // Check if we're already on list of signatures\n    for (let i = 0; i < multisigTransaction.transaction.signatures.length; i++) {\n        if (multisigTransaction.transaction.signatures[i].signer === data.account.publicKey) {\n            return false;\n        }\n    }\n\n    if (!data.meta.cosignatoryOf.length) {\n        return false;\n    } else {\n        for (let k = 0; k < data.meta.cosignatoryOf.length; k++) {\n            if (data.meta.cosignatoryOf[k].publicKey === multisigTransaction.transaction.otherTrans.signer) {\n                return true;\n            } else if (k === data.meta.cosignatoryOf.length - 1) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\n\n/**\n * Return the name of a transaction type id\n *\n * @param {number} id - A transaction type id\n *\n * @return {string} - The transaction type name\n */\nlet txTypeToName = function(id) {\n    switch (id) {\n        case TransactionTypes.Transfer:\n            return 'Transfer';\n        case TransactionTypes.ImportanceTransfer:\n            return 'ImportanceTransfer';\n        case TransactionTypes.MultisigModification:\n            return 'MultisigModification';\n        case TransactionTypes.ProvisionNamespace:\n            return 'ProvisionNamespace';\n        case TransactionTypes.MosaicDefinition:\n            return 'MosaicDefinition';\n        case TransactionTypes.MosaicSupply:\n            return 'MosaicSupply';\n        default:\n            return 'Unknown_' + id;\n    }\n}\n\n/**\n * Check if a transaction is already present in an array of transactions\n *\n * @param {string} hash - A transaction hash\n * @param {array} array - An array of transactions\n *\n * @return {boolean} - True if present, false otherwise\n */\nlet haveTx = function(hash, array) {\n    let i = null;\n    for (i = 0; array.length > i; i++) {\n        if (array[i].meta.hash.data === hash) {\n            return true;\n        }\n    }\n    return false;\n};\n\n/**\n * Gets the index of a transaction in an array of transactions.\n * It must be present in the array.\n *\n * @param {string} hash - A transaction hash\n * @param {array} array - An array of transactions\n *\n * @return {number} - The index of the transaction\n */\nlet getTransactionIndex = function(hash, array) {\n    let i = null;\n    for (i = 0; array.length > i; i++) {\n        if (array[i].meta.hash.data === hash) {\n            return i;\n        }\n    }\n    return 0;\n};\n\n/**\n * Return mosaic name from mosaicId object\n *\n * @param {object} mosaicId - A mosaicId object\n *\n * @return {string} - The mosaic name\n */\nlet mosaicIdToName = function(mosaicId) {\n    if (!mosaicId) return mosaicId;\n    return mosaicId.namespaceId + \":\" + mosaicId.name;\n}\n\n/**\n * Parse uri to get hostname\n *\n * @param {string} uri - An uri string\n *\n * @return {string} - The uri hostname\n */\nlet getHostname = function(uri) {\n    let _uriParser = document.createElement('a');\n    _uriParser.href = uri;\n    return _uriParser.hostname;\n}\n\n/**\n * Check if a cosignatory is already present in modifications array\n *\n * @param {string} address - A cosignatory address\n * @param {string} pubKey - A cosignatory public key\n * @param {array} array - A modifications array\n *\n * @return {boolean} - True if present, false otherwise\n */\nlet haveCosig = function(address, pubKey, array) {\n    let i = null;\n    for (i = 0; array.length > i; i++) {\n        if (array[i].address === address || array[i].pubKey === pubKey) {\n            return true;\n        }\n    }\n    return false;\n};\n\n/**\n * Remove extension of a file name\n *\n * @param {string} filename - A file name with extension\n *\n * @return {string} - The file name without extension\n */\nlet getFileName = function(filename) {\n    return filename.replace(/\\.[^/.]+$/, \"\");\n};\n\n/**\n * Gets extension of a file name\n *\n * @param {string} filename - A file name with extension\n *\n * @return {string} - The file name extension\n */\nlet getExtension = function(filename) {\n    return filename.split('.').pop();\n}\n\n/***\n * NEM epoch time\n *\n * @type {number}\n */\nlet NEM_EPOCH = Date.UTC(2015, 2, 29, 0, 6, 25, 0);\n\n/**\n * Create a time stamp for a NEM transaction\n *\n * @return {number} - The NEM transaction time stamp in milliseconds\n */\nlet createNEMTimeStamp = function() {\n    return Math.floor((Date.now() / 1000) - (NEM_EPOCH / 1000));\n}\n\n/**\n * Fix a private key\n *\n * @param {string} privatekey - An hex private key\n *\n * @return {string} - The fixed hex private key\n */\nlet fixPrivateKey = function(privateKey) {\n    return (\"0000000000000000000000000000000000000000000000000000000000000000\" + privateKey.replace(/^00/, '')).slice(-64);\n}\n\n/**\n * Check if a private key is valid\n *\n * @param {string} privatekey - A private key\n *\n * @return {boolean} - True if valid, false otherwise\n */\nlet isPrivateKeyValid = function(privateKey) {\n    if (privateKey.length !== 64 && privateKey.length !== 66) {\n        console.error('Private key length must be 64 or 66 characters !');\n        return false;\n    } else if (!isHexadecimal(privateKey)) {\n        console.error('Private key must be hexadecimal only !');\n        return false;\n    } else {\n        return true;\n    }\n}\n\n/**\n * Check if a public key is valid\n *\n * @param {string} publicKey - A public key\n *\n * @return {boolean} - True if valid, false otherwise\n */\nlet isPublicKeyValid = function(publicKey) {\n    if (publicKey.length !== 64) {\n        console.error('Public key length must be 64 or 66 characters !');\n        return false;\n    } else if (!isHexadecimal(publicKey)) {\n        console.error('Public key must be hexadecimal only !');\n        return false;\n    } else {\n        return true;\n    }\n}\n\n/**\n * Check and format an url\n *\n * @param {string} node - A custom node from user input\n * @param {number} defaultWebsocketPort - A default websocket port\n *\n * @return {string|number} - The formatted node as string or 1\n */\nlet checkAndFormatUrl = function (node, defaultWebsocketPort) {\n    // Detect if custom node doesn't begin with \"http://\"\n        var pattern = /^((http):\\/\\/)/;\n        if (!pattern.test(node)) {\n            node = \"http://\" + node;\n            let _uriParser = document.createElement('a');\n            _uriParser.href = node;\n            // If no port we add it\n            if (!_uriParser.port) {\n                node = node + \":\" + defaultWebsocketPort;\n            } else if (_uriParser.port !== defaultWebsocketPort) {\n                // Port is not default websocket port\n                return 1;\n            }\n        } else {\n            // Start with \"http://\"\"\n            let _uriParser = document.createElement('a');\n            _uriParser.href = node;\n            // If no port we add it\n            if (!_uriParser.port) {\n                node = node + \":\" + defaultWebsocketPort;\n            } else if (_uriParser.port !== defaultWebsocketPort) {\n                // Port is not default websocket port\n                return 1;\n            }\n        }\n        return node;\n}\n \n/**\n * Create a time stamp\n *\n * @return {object} - A date object\n */\nlet createTimeStamp = function() {\n    return new Date();\n}\n\n/**\n * Date object to YYYY-MM-DD format\n *\n * @param {object} date - A date object\n *\n * @return {string} - The short date\n */\nlet getTimestampShort = function(date) {\n    let dd = date.getDate();\n    let mm = date.getMonth() + 1; //January is 0!\n    let yyyy = date.getFullYear();\n\n    if (dd < 10) {\n        dd = '0' + dd\n    }\n\n    if (mm < 10) {\n        mm = '0' + mm\n    }\n\n    return yyyy + '-' + mm + '-' + dd;\n};\n\n/**\n * Date object to date string\n *\n * @param {object} date - A date object\n *\n * @return {string} - The date string\n */\nlet convertDateToString = function(date) {\n    return date.toDateString();\n};\n\n/**\n * Mimics jQuery's extend function\n *\n * http://stackoverflow.com/a/11197343\n */\nlet extendObj = function(){\n    for(var i=1; i<arguments.length; i++) {\n        for(var key in arguments[i]) {\n            if(arguments[i].hasOwnProperty(key)) {\n                arguments[0][key] = arguments[i][key];\n            }\n        }\n    }\n    return arguments[0];\n}\n\n/**\n * Test if a string is hexadecimal\n *\n * @param {string} str - A string to test\n *\n * @return {boolean} - True if correct, false otherwise\n */\nlet isHexadecimal = function(str) {\n    return str.match('^(0x|0X)?[a-fA-F0-9]+$') !== null;\n}\n\n/**\n * Search for mosaic definition(s) into an array of mosaicDefinition objects\n *\n * @param {array} mosaicDefinitionArray - An array of mosaicDefinition objects\n * @param {array} keys - Array of strings with names of the mosaics to find (['eur', 'usd',...])\n *\n * @return {object} - An object of mosaicDefinition objects\n */\nlet searchMosaicDefinitionArray = function(mosaicDefinitionArray, keys) {\n    let result = {}\n    for (let i = 0; i < keys.length; i++) {\n        for(let k = 0; k < mosaicDefinitionArray.length; k++) {\n            if(mosaicDefinitionArray[k].mosaic.id.name === keys[i]) {\n                result[mosaicIdToName(mosaicDefinitionArray[k].mosaic.id)] = mosaicDefinitionArray[k].mosaic;\n            }\n        }\n    }\n    return result;\n}\n\n/**\n * Mimics jQuery's grep function\n */\nlet grep = function(items, callback) {\n    var filtered = [],\n        len = items.length,\n        i = 0;\n    for (i; i < len; i++) {\n        var item = items[i];\n        var cond = callback(item);\n        if (cond) {\n            filtered.push(item);\n        }\n    }\n\n    return filtered;\n};\n\n/**\n * Check if a text input amount is valid\n *\n * @param {string} n - The number as a string\n *\n * @return {boolean} - True if valid, false otherwise\n */\nlet isTextAmountValid = function(n) {\n    // Force n as a string and replace decimal comma by a dot if any\n    var nn = Number(n.toString().replace(/,/g, '.'));\n    return !Number.isNaN(nn) && Number.isFinite(nn) && nn >= 0;\n}\n\n/**\n * Clean a text input amount and return it as number\n *\n * @param {string} n - The number as a string\n *\n * @return {number} - The clean amount\n */\nlet cleanTextAmount = function(n) {\n    return Number(n.toString().replace(/,/g, '.'));\n}\n\n/**\n * Convert an endpoint object to an endpoint url\n *\n * @param {object} endpoint - An endpoint object\n *\n * @return {String} - An endpoint url\n */\nlet formatEndpoint = function(endpoint) {\n    return endpoint.host + ':' + endpoint.port;\n}\n\nmodule.exports = {\n    haveWallet,\n    needsSignature,\n    txTypeToName,\n    haveTx,\n    getTransactionIndex,\n    mosaicIdToName,\n    getHostname,\n    haveCosig,\n    getFileName,\n    getExtension,\n    createNEMTimeStamp,\n    fixPrivateKey,\n    isPrivateKeyValid,\n    isPublicKeyValid,\n    checkAndFormatUrl,\n    createTimeStamp,\n    getTimestampShort,\n    convertDateToString,\n    extendObj,\n    isHexadecimal,\n    searchMosaicDefinitionArray,\n    grep,\n    isTextAmountValid,\n    cleanTextAmount,\n    formatEndpoint\n}"]}