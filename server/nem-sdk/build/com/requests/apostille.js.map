{"version":3,"sources":["../../../src/com/requests/apostille.js"],"names":["urlEncodedHeader","audit","publicKey","data","signedData","Promise","resolve","reject","options","url","apostilleAuditServer","method","headers","qs","error","response","body","statusCode","JSON","parse","module","exports"],"mappings":";;AAAA;;;;AACA;;;;;;AAEA,IAAIA,mBAAmB;AACtB,iBAAgB;;AAGjB;;;;;;;;;AAJuB,CAAvB,CAaA,IAAIC,QAAQ,SAARA,KAAQ,CAASC,SAAT,EAAoBC,IAApB,EAA0BC,UAA1B,EAAsC;AACjD,QAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACvC;AACA,MAAIC,UAAU;AACVC,QAAK,gBAAMC,oBADD;AAEVC,WAAQ,MAFE;AAGVC,YAASZ,gBAHC;AAIVa,OAAI,EAAC,aAAaX,SAAd,EAAyB,QAAQC,IAAjC,EAAsC,cAAcC,UAApD;;AAGR;AAPc,GAAd,CAQA,uBAAQI,OAAR,EAAiB,UAAUM,KAAV,EAAiBC,QAAjB,EAA2BC,IAA3B,EAAiC;AAC9C,OAAI,CAACF,KAAD,IAAUC,SAASE,UAAT,IAAuB,GAArC,EAA0C;AACtCX,YAAQY,KAAKC,KAAL,CAAWH,IAAX,CAAR;AACH,IAFD,MAEO;AACNT,WAAOO,KAAP;AACA;AACJ,GAND;AAOA,EAjBM,CAAP;AAkBA,CAnBD;;AAqBAM,OAAOC,OAAP,GAAiB;AAChBpB;AADgB,CAAjB","file":"apostille.js","sourcesContent":["import Request from 'request';\nimport Nodes from '../../model/nodes';\n\nlet urlEncodedHeader = {\n\t'Content-Type': 'application/x-www-form-urlencoded'\n}\n\n/**\n * Audit an apostille file\n *\n * @param {string} publicKey - The signer public key\n * @param {string} data - The file data of audited file\n * @param {string} signedData - The signed data into the apostille transaction message\n *\n * @return {boolean} - True if valid, false otherwise\n */\nlet audit = function(publicKey, data, signedData) {\n\treturn new Promise((resolve, reject) => {\n\t\t// Configure the request\n\t\tvar options = {\n\t\t    url: Nodes.apostilleAuditServer,\n\t\t    method: 'POST',\n\t\t    headers: urlEncodedHeader,\n\t\t    qs: {'publicKey': publicKey, 'data': data,'signedData': signedData}\n\t\t}\n\n\t\t// Start the request\n\t\tRequest(options, function (error, response, body) {\n\t\t    if (!error && response.statusCode == 200) {\n\t\t        resolve(JSON.parse(body));\n\t\t    } else {\n\t\t    \treject(error);\n\t\t    }\n\t\t});\n\t});\n}\n\nmodule.exports = {\n\taudit\n}"]}